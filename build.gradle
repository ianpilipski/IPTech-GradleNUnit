plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.10.1'
    id 'pl.allegro.tech.build.axion-release' version '1.11.0'
}

sourceCompatibility = 1.8

repositories {
    jcenter()
}

//allow publish key/secret override from environment variable
task setupPluginUpload {
    doLast {
        if (System.env.gradlePublishKey) System.properties.setProperty('gradle.publish.key', System.env.gradlePublishKey)
        if (System.env.gradlePublishSecret) System.properties.setProperty('gradle.publish.secret', System.env.gradlePublishSecret)
    }
    tasks.publishPlugins.dependsOn(delegate)
}

version scmVersion.version
group 'com.iptech.gradle'
description = 'A plugin that allows you work with NUnit output'

pluginBundle {
    website = 'https://github.com/ianpilipski'
    vcsUrl = 'https://github.com/ianpilipski/IPTech-GradleNUnit'
    tags = ['nunit', 'iptech']
}

gradlePlugin {
    plugins {
        nunitPlugin {
            id = 'com.iptech.gradle.nunit-plugin'
            displayName = 'IPTech NUnit Plugin'
            description = 'A plugin that allows you parse NUnit xml output'
            implementationClass = 'com.iptech.gradle.nunit.NUnitPlugin'
        }
    }
}

dependencies {
    implementation gradleApi()

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.7.22'
}
